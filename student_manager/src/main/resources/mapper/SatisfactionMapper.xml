<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bm.student_manager.dao.SatisfactionMapper">
    <resultMap id="BaseResultMap" type="com.bm.student_manager.entity.Satisfaction">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="UUID" jdbcType="VARCHAR" property="uuid"/>
        <result column="TIME" jdbcType="VARCHAR" property="time"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="investigator" jdbcType="VARCHAR" property="investigator"/>
        <result column="respondents" jdbcType="VARCHAR" property="respondents"/>
        <result column="survey_satisfaction" jdbcType="VARCHAR" property="surveySatisfaction"/>
        <result column="remarks" jdbcType="LONGVARCHAR" property="remarks"/>
    </resultMap>
    <delete id="deleteByPrimaryKey">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from satisfaction
        where UUID = #{uuid}
    </delete>
    <insert id="insert" parameterType="com.bm.student_manager.entity.Satisfaction">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into satisfaction ( TIME, content,
        investigator, respondents, survey_satisfaction,
        remarks)
        values ( #{time,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},
        #{investigator,jdbcType=VARCHAR}, #{respondents,jdbcType=VARCHAR}, #{surveySatisfaction,jdbcType=VARCHAR},
        #{remarks,jdbcType=LONGVARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.bm.student_manager.entity.Satisfaction">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update satisfaction
        set TIME = #{time,jdbcType=VARCHAR},
        content = #{content,jdbcType=VARCHAR},
        investigator = #{investigator,jdbcType=VARCHAR},
        respondents = #{respondents,jdbcType=VARCHAR},
        survey_satisfaction = #{surveySatisfaction,jdbcType=VARCHAR},
        remarks = #{remarks,jdbcType=LONGVARCHAR}
        where UUID = #{uuid,jdbcType=VARCHAR}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select UUID, TIME, content, investigator, respondents, survey_satisfaction, remarks
        from satisfaction
        where UUID = #{uuid,jdbcType=VARCHAR}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select UUID, TIME, content, investigator, respondents, survey_satisfaction, remarks
        from satisfaction
    </select>
    <select id="count" resultType="java.lang.Integer">
       select count(1)
    from satisfaction
    </select>
    <select id="selectPage" resultMap="BaseResultMap">
        select UUID, TIME, content, investigator, respondents, survey_satisfaction, remarks
        from satisfaction
        <where>
            <if test="investigator != null">
                investigator like concat('%',#{investigator},'%')
            </if>
            <if test="surveySatisfaction != null">
                and survey_satisfaction like concat('%',#{surveySatisfaction},'%')
            </if>
        </where>
    </select>
    <select id="countPage" resultType="java.lang.Integer">
        select count(1)
        from satisfaction
        <where>
            <if test="investigator != null">
                investigator like concat('%',#{investigator},'%')
            </if>
            <if test="surveySatisfaction != null">
                and survey_satisfaction like concat('%',#{surveySatisfaction},'%')
            </if>
        </where>
    </select>
</mapper>